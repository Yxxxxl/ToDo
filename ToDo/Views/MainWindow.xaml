<Window
    x:Class="ToDo.Views.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:local="clr-namespace:ToDo.Views"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:converters="clr-namespace:MaterialDesignThemes.Wpf.Converters;assembly=MaterialDesignThemes.Wpf"
    xmlns:wpf="clr-namespace:MaterialDesignThemes.Wpf;assembly=MaterialDesignThemes.Wpf"
    xmlns:prism="http://prismlibrary.com/"
    Title="MainWindow"
    Width="800"
    Height="450"
    prism:ViewModelLocator.AutoWireViewModel="True"
    AllowsTransparency="True"
    WindowStyle="None"
    WindowStartupLocation="CenterScreen"
    TextElement.Foreground="{DynamicResource MaterialDesignBody}"
    TextElement.FontWeight="Regular"
    TextElement.FontSize="13"
    TextOptions.TextFormattingMode="Ideal"
    TextOptions.TextRenderingMode="Auto"
    Background="{DynamicResource MaterialDesignPaper}"
    FontFamily="{DynamicResource MaterialDesignFont}"
    mc:Ignorable="d">
    <Window.Resources>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD" />
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070" />
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD" />
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1" />
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6" />
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B" />
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4" />
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5" />
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383" />
        <Style x:Key="CircleBtn" TargetType="Button">
            <Setter Property="Width" Value="15" />
            <Setter Property="Height" Value="15" />
            <Setter Property="FontFamily" Value="/Resources/#iconfont" />
            <Setter Property="FontSize" Value="8" />
            <Setter Property="BorderBrush" Value="Black" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border"
                            Width="{TemplateBinding Width}"
                            Height="{TemplateBinding Height}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{Binding ActualHeight, RelativeSource={RelativeSource Self}}"
                            SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Focusable="False"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                        <ControlTemplate.Triggers>

                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Cursor" Value="Hand" />
                                <Setter TargetName="contentPresenter" Property="Visibility" Value="Visible" />
                            </Trigger>

                            <Trigger Property="IsMouseOver" Value="False">
                                <Setter Property="Cursor" Value="Arrow" />
                                <Setter TargetName="contentPresenter" Property="Visibility" Value="Hidden" />
                            </Trigger>

                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource Button.Disabled.Background}" />
                                <Setter TargetName="contentPresenter" Property="Visibility" Value="Hidden" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <materialDesign:DrawerHost IsRightDrawerOpen="{Binding ElementName=MenuToggleButton, Path=IsChecked}">
        <materialDesign:DrawerHost.RightDrawerContent>
            <DockPanel MinWidth="220" LastChildFill="False">
                <StackPanel
                    Margin="0,20,0,0"
                    DockPanel.Dock="Top"
                    Orientation="Vertical">
                    <Image
                        Width="50"
                        Height="50"
                        Source="/Resources/user.jpg"
                        Stretch="Fill">
                        <Image.Clip>
                            <EllipseGeometry
                                Center="25,25"
                                RadiusX="25"
                                RadiusY="25" />
                        </Image.Clip>
                    </Image>
                    <TextBlock
                        Text="NaNa"
                        Margin="0,10"
                        HorizontalAlignment="Center" />
                    <ListBox ItemContainerStyle="{StaticResource MyListBoxItemStyle}" ItemsSource="{Binding MenuBars}">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal" Background="Transparent">
                                    <materialDesign:PackIcon Margin="4,0,10,0" Kind="{Binding Icon}" />
                                    <TextBlock Text="{Binding Title}" Height="Auto" />
                                </StackPanel>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </StackPanel>
            </DockPanel>
        </materialDesign:DrawerHost.RightDrawerContent>

        <DockPanel>
            <materialDesign:ColorZone
                Name="StateBar"
                Padding="13"
                materialDesign:ShadowAssist.ShadowDepth="Depth2"
                Mode="PrimaryMid"
                DockPanel.Dock="Top">
                <DockPanel LastChildFill="False">
                    <StackPanel Orientation="Horizontal" DockPanel.Dock="Left">
                        <Button
                            Name="CloseBtn"
                            Content="&#xe67a;"
                            Margin="0,0,8,0"
                            Style="{StaticResource CircleBtn}"
                            Background="#EE5B55" />
                        <Button
                            Name="MinBtn"
                            Content="&#xe679;"
                            Margin="0,0,8,0"
                            Style="{StaticResource CircleBtn}"
                            Background="#F8BC32" />
                        <Button
                            Name="MaxBtn"
                            Content="&#xe674;"
                            Margin="0,0,0,0"
                            Style="{StaticResource CircleBtn}"
                            Background="#61C942" />
                        <Button
                            Content="{materialDesign:PackIcon Kind=ArrowLeft,
                                                              Size=18}"
                            Command="{Binding MovePrevCommand}"
                            Margin="20,0,0,0"
                            materialDesign:RippleAssist.Feedback="{Binding RelativeSource={RelativeSource Self}, Path=Foreground, Converter={StaticResource BrushRoundConverter}}"
                            ToolTip="Previous Item"
                            Style="{StaticResource MaterialDesignToolButton}"
                            Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}"
                            Cursor="Hand" />

                        <Button
                            Content="{materialDesign:PackIcon Kind=ArrowRight,
                                                              Size=18}"
                            Command="{Binding MoveNextCommand}"
                            Margin="5,0,0,0"
                            materialDesign:RippleAssist.Feedback="{Binding RelativeSource={RelativeSource Self}, Path=Foreground, Converter={StaticResource BrushRoundConverter}}"
                            ToolTip="Next Item"
                            Style="{StaticResource MaterialDesignToolButton}"
                            Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}"
                            Cursor="Hand" />


                    </StackPanel>

                    <StackPanel Orientation="Horizontal" DockPanel.Dock="Right">
                        <Image
                            Width="22"
                            Height="22"
                            Margin="0,0,15,0"
                            Source="/Resources/user.jpg"
                            Stretch="Fill">
                            <Image.Clip>
                                <EllipseGeometry
                                    Center="11,11"
                                    RadiusX="11"
                                    RadiusY="11" />
                            </Image.Clip>
                        </Image>
                        <ToggleButton x:Name="MenuToggleButton"
                            IsChecked="False"
                            Width="22"
                            Height="22"
                            Style="{StaticResource MaterialDesignHamburgerToggleButton}"
                            AutomationProperties.Name="HamburgerToggleButton" />
                    </StackPanel>

                </DockPanel>
            </materialDesign:ColorZone>


        </DockPanel>
    </materialDesign:DrawerHost>
</Window>
